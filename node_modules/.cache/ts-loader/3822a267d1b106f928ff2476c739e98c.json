{"remainingRequest":"/home/praful/aappp/OC_7-Build_a_Full-Stack_solution-main/frontend/node_modules/babel-loader/lib/index.js!/home/praful/aappp/OC_7-Build_a_Full-Stack_solution-main/frontend/node_modules/ts-loader/index.js??ref--13-2!/home/praful/aappp/OC_7-Build_a_Full-Stack_solution-main/frontend/src/helpers/user-getter.ts","dependencies":[{"path":"/home/praful/aappp/OC_7-Build_a_Full-Stack_solution-main/frontend/src/helpers/user-getter.ts","mtime":1624537514000},{"path":"/home/praful/aappp/OC_7-Build_a_Full-Stack_solution-main/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/praful/aappp/OC_7-Build_a_Full-Stack_solution-main/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/praful/aappp/OC_7-Build_a_Full-Stack_solution-main/frontend/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL3ByYWZ1bC9hYXBwcC9PQ183LUJ1aWxkX2FfRnVsbC1TdGFja19zb2x1dGlvbi1tYWluL2Zyb250ZW5kL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0LmpzIjsKaW1wb3J0IHsgZ2V0SHR0cEhlYWRlcnMgfSBmcm9tICIuL2h0dHAtaGVhZGVyLWdldHRlciI7CmV4cG9ydCBmdW5jdGlvbiBwb3N0TmV3VXNlcihfeCkgewogIHJldHVybiBfcG9zdE5ld1VzZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKfQoKZnVuY3Rpb24gX3Bvc3ROZXdVc2VyKCkgewogIF9wb3N0TmV3VXNlciA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZShyZWdpc3RyYXRpb25faW5mbykgewogICAgdmFyIHJlcXVlc3QsIHJlc3BvbnNlOwogICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjsKICAgICAgICAgICAgcmV0dXJuIGZldGNoKCJodHRwOi8vbG9jYWxob3N0OjMwMDAvdXNlci9yZWdpc3RlciIsIHsKICAgICAgICAgICAgICBtZXRob2Q6ICJQT1NUIiwKICAgICAgICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7CiAgICAgICAgICAgICAgICB1c2VybmFtZTogcmVnaXN0cmF0aW9uX2luZm8udXNlcm5hbWUsCiAgICAgICAgICAgICAgICBlbWFpbDogcmVnaXN0cmF0aW9uX2luZm8uZW1haWwsCiAgICAgICAgICAgICAgICBwYXNzd29yZDogcmVnaXN0cmF0aW9uX2luZm8ucGFzc3dvcmQKICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICBoZWFkZXJzOiBnZXRIdHRwSGVhZGVycygpCiAgICAgICAgICAgIH0pOwoKICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgcmVxdWVzdCA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA1OwogICAgICAgICAgICByZXR1cm4gcmVxdWVzdC5qc29uKCk7CgogICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0LnNlbnQ7CgogICAgICAgICAgICBpZiAocmVxdWVzdC5vaykgewogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA4OwogICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICB9CgogICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoIkVycm9yICIuY29uY2F0KHJlcXVlc3Quc3RhdHVzLCAiIDogIikuY29uY2F0KHJlc3BvbnNlLmVycm9yLCAiLiIpKTsKCiAgICAgICAgICBjYXNlIDg6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIsIHJlc3BvbnNlKTsKCiAgICAgICAgICBjYXNlIDk6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgX2NhbGxlZSk7CiAgfSkpOwogIHJldHVybiBfcG9zdE5ld1VzZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKfQoKZXhwb3J0IGZ1bmN0aW9uIGxvZ2luVXNlcihfeDIpIHsKICByZXR1cm4gX2xvZ2luVXNlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwp9CgpmdW5jdGlvbiBfbG9naW5Vc2VyKCkgewogIF9sb2dpblVzZXIgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKHVzZXIpIHsKICAgIHZhciByZXF1ZXN0LCByZXNwb25zZTsKICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMjsKICAgICAgICAgICAgcmV0dXJuIGZldGNoKCJodHRwOi8vbG9jYWxob3N0OjMwMDAvdXNlci9sb2dpbiIsIHsKICAgICAgICAgICAgICBtZXRob2Q6ICJQT1NUIiwKICAgICAgICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7CiAgICAgICAgICAgICAgICBlbWFpbDogdXNlci5lbWFpbCwKICAgICAgICAgICAgICAgIHBhc3N3b3JkOiB1c2VyLnBhc3N3b3JkCiAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgaGVhZGVyczogZ2V0SHR0cEhlYWRlcnMoKQogICAgICAgICAgICB9KTsKCiAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgIHJlcXVlc3QgPSBfY29udGV4dDIuc2VudDsKICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSA1OwogICAgICAgICAgICByZXR1cm4gcmVxdWVzdC5qc29uKCk7CgogICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0Mi5zZW50OwoKICAgICAgICAgICAgaWYgKHJlcXVlc3Qub2spIHsKICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDg7CiAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcigiRXJyb3IgIi5jb25jYXQocmVxdWVzdC5zdGF0dXMsICIgOiAiKS5jb25jYXQocmVzcG9uc2UuZXJyb3IpKTsKCiAgICAgICAgICBjYXNlIDg6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuYWJydXB0KCJyZXR1cm4iLCByZXNwb25zZSk7CgogICAgICAgICAgY2FzZSA5OgogICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgfQogICAgICB9CiAgICB9LCBfY2FsbGVlMik7CiAgfSkpOwogIHJldHVybiBfbG9naW5Vc2VyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7Cn0KCmV4cG9ydCBmdW5jdGlvbiBhdXRoZW50aWNhdGVVc2VyKCkgewogIHJldHVybiBfYXV0aGVudGljYXRlVXNlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwp9CgpmdW5jdGlvbiBfYXV0aGVudGljYXRlVXNlcigpIHsKICBfYXV0aGVudGljYXRlVXNlciA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTMoKSB7CiAgICB2YXIgcmVxdWVzdCwgcmVzcG9uc2U7CiAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTMkKF9jb250ZXh0MykgewogICAgICB3aGlsZSAoMSkgewogICAgICAgIHN3aXRjaCAoX2NvbnRleHQzLnByZXYgPSBfY29udGV4dDMubmV4dCkgewogICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDI7CiAgICAgICAgICAgIHJldHVybiBmZXRjaCgiaHR0cDovL2xvY2FsaG9zdDozMDAwL3VzZXIvYXV0aGVudGljYXRlIiwgewogICAgICAgICAgICAgIG1ldGhvZDogIlBPU1QiLAogICAgICAgICAgICAgIGhlYWRlcnM6IGdldEh0dHBIZWFkZXJzKCkKICAgICAgICAgICAgfSk7CgogICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICByZXF1ZXN0ID0gX2NvbnRleHQzLnNlbnQ7CiAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gNTsKICAgICAgICAgICAgcmV0dXJuIHJlcXVlc3QuanNvbigpOwoKICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dDMuc2VudDsKCiAgICAgICAgICAgIGlmIChyZXF1ZXN0Lm9rKSB7CiAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSA4OwogICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICB9CgogICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoIkVycm9yICIuY29uY2F0KHJlcXVlc3Quc3RhdHVzLCAiIDogIikuY29uY2F0KHJlc3BvbnNlLmVycm9yKSk7CgogICAgICAgICAgY2FzZSA4OgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLmFicnVwdCgicmV0dXJuIiwgcmVzcG9uc2UudXNlcik7CgogICAgICAgICAgY2FzZSA5OgogICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5zdG9wKCk7CiAgICAgICAgfQogICAgICB9CiAgICB9LCBfY2FsbGVlMyk7CiAgfSkpOwogIHJldHVybiBfYXV0aGVudGljYXRlVXNlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwp9CgpleHBvcnQgZnVuY3Rpb24gZGVsZXRlVXNlcihfeDMsIF94NCkgewogIHJldHVybiBfZGVsZXRlVXNlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwp9CgpmdW5jdGlvbiBfZGVsZXRlVXNlcigpIHsKICBfZGVsZXRlVXNlciA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTQodXNlcl9pZCwgdXNlcl9wYXNzd29yZCkgewogICAgdmFyIHJlcXVlc3QsIHJlc3BvbnNlOwogICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWU0JChfY29udGV4dDQpIHsKICAgICAgd2hpbGUgKDEpIHsKICAgICAgICBzd2l0Y2ggKF9jb250ZXh0NC5wcmV2ID0gX2NvbnRleHQ0Lm5leHQpIHsKICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgX2NvbnRleHQ0Lm5leHQgPSAyOwogICAgICAgICAgICByZXR1cm4gZmV0Y2goImh0dHA6Ly9sb2NhbGhvc3Q6MzAwMC91c2VyLyIuY29uY2F0KHVzZXJfaWQsICIvZGVsZXRlIiksIHsKICAgICAgICAgICAgICBtZXRob2Q6ICJQT1NUIiwKICAgICAgICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7CiAgICAgICAgICAgICAgICBwYXNzd29yZDogdXNlcl9wYXNzd29yZAogICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgIGhlYWRlcnM6IGdldEh0dHBIZWFkZXJzKCkKICAgICAgICAgICAgfSk7CgogICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICByZXF1ZXN0ID0gX2NvbnRleHQ0LnNlbnQ7CiAgICAgICAgICAgIF9jb250ZXh0NC5uZXh0ID0gNTsKICAgICAgICAgICAgcmV0dXJuIHJlcXVlc3QuanNvbigpOwoKICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dDQuc2VudDsKCiAgICAgICAgICAgIGlmIChyZXF1ZXN0Lm9rKSB7CiAgICAgICAgICAgICAgX2NvbnRleHQ0Lm5leHQgPSA4OwogICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICB9CgogICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoIkVycm9yICIuY29uY2F0KHJlcXVlc3Quc3RhdHVzLCAiIDogIikuY29uY2F0KHJlc3BvbnNlLmVycm9yKSk7CgogICAgICAgICAgY2FzZSA4OgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ0LmFicnVwdCgicmV0dXJuIiwgcmVzcG9uc2UpOwoKICAgICAgICAgIGNhc2UgOToKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDQuc3RvcCgpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgX2NhbGxlZTQpOwogIH0pKTsKICByZXR1cm4gX2RlbGV0ZVVzZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKfQ=="},{"version":3,"sources":["/home/praful/aappp/OC_7-Build_a_Full-Stack_solution-main/frontend/src/helpers/user-getter.ts"],"names":[],"mappings":";;;;AACA,SAAS,cAAT,QAA+B,sBAA/B;AAEA,gBAAsB,WAAtB;AAAA;AAAA;;;yEAAO,iBACL,iBADK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAGiB,KAAK,CAAC,qCAAD,EAAwC;AACjE,cAAA,MAAM,EAAE,MADyD;AAEjE,cAAA,IAAI,EAAE,IAAI,CAAC,SAAL,CAAe;AACnB,gBAAA,QAAQ,EAAE,iBAAiB,CAAC,QADT;AAEnB,gBAAA,KAAK,EAAE,iBAAiB,CAAC,KAFN;AAGnB,gBAAA,QAAQ,EAAE,iBAAiB,CAAC;AAHT,eAAf,CAF2D;AAOjE,cAAA,OAAO,EAAE,cAAc;AAP0C,aAAxC,CAHtB;;AAAA;AAGC,YAAA,OAHD;AAAA;AAAA,mBAakB,OAAO,CAAC,IAAR,EAblB;;AAAA;AAaC,YAAA,QAbD;;AAAA,gBAeA,OAAO,CAAC,EAfR;AAAA;AAAA;AAAA;;AAAA,kBAgBG,IAAI,KAAJ,iBAAmB,OAAO,CAAC,MAA3B,gBAAuC,QAAQ,CAAC,KAAhD,OAhBH;;AAAA;AAAA,6CAmBE,QAnBF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAsBP,gBAAsB,SAAtB;AAAA;AAAA;;;uEAAO,kBACL,IADK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAGiB,KAAK,CAAC,kCAAD,EAAqC;AAC9D,cAAA,MAAM,EAAE,MADsD;AAE9D,cAAA,IAAI,EAAE,IAAI,CAAC,SAAL,CAAe;AAAE,gBAAA,KAAK,EAAE,IAAI,CAAC,KAAd;AAAqB,gBAAA,QAAQ,EAAE,IAAI,CAAC;AAApC,eAAf,CAFwD;AAG9D,cAAA,OAAO,EAAE,cAAc;AAHuC,aAArC,CAHtB;;AAAA;AAGC,YAAA,OAHD;AAAA;AAAA,mBASkB,OAAO,CAAC,IAAR,EATlB;;AAAA;AASC,YAAA,QATD;;AAAA,gBAWA,OAAO,CAAC,EAXR;AAAA;AAAA;AAAA;;AAAA,kBAYG,IAAI,KAAJ,iBAAmB,OAAO,CAAC,MAA3B,gBAAuC,QAAQ,CAAC,KAAhD,EAZH;;AAAA;AAAA,8CAeE,QAfF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAkBP,gBAAsB,gBAAtB;AAAA;AAAA;;;8EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACiB,KAAK,CAAC,yCAAD,EAA4C;AACrE,cAAA,MAAM,EAAE,MAD6D;AAErE,cAAA,OAAO,EAAE,cAAc;AAF8C,aAA5C,CADtB;;AAAA;AACC,YAAA,OADD;AAAA;AAAA,mBAMkB,OAAO,CAAC,IAAR,EANlB;;AAAA;AAMC,YAAA,QAND;;AAAA,gBAQA,OAAO,CAAC,EARR;AAAA;AAAA;AAAA;;AAAA,kBASG,IAAI,KAAJ,iBAAmB,OAAO,CAAC,MAA3B,gBAAuC,QAAQ,CAAC,KAAhD,EATH;;AAAA;AAAA,8CAYE,QAAQ,CAAC,IAZX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAeP,gBAAsB,UAAtB;AAAA;AAAA;;;wEAAO,kBACL,OADK,EAEL,aAFK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAIiB,KAAK,sCAA+B,OAA/B,cAAiD;AAC1E,cAAA,MAAM,EAAE,MADkE;AAE1E,cAAA,IAAI,EAAE,IAAI,CAAC,SAAL,CAAe;AAAE,gBAAA,QAAQ,EAAE;AAAZ,eAAf,CAFoE;AAG1E,cAAA,OAAO,EAAE,cAAc;AAHmD,aAAjD,CAJtB;;AAAA;AAIC,YAAA,OAJD;AAAA;AAAA,mBAUkB,OAAO,CAAC,IAAR,EAVlB;;AAAA;AAUC,YAAA,QAVD;;AAAA,gBAYA,OAAO,CAAC,EAZR;AAAA;AAAA;AAAA;;AAAA,kBAaG,IAAI,KAAJ,iBAAmB,OAAO,CAAC,MAA3B,gBAAuC,QAAQ,CAAC,KAAhD,EAbH;;AAAA;AAAA,8CAgBE,QAhBF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import { RegistrationInformation, LoginCredentials, User } from \"../types\";\nimport { getHttpHeaders } from \"./http-header-getter\";\n\nexport async function postNewUser(\n  registration_info: RegistrationInformation\n): Promise<{ user: User; token: string }> {\n  const request = await fetch(\"http://localhost:3000/user/register\", {\n    method: \"POST\",\n    body: JSON.stringify({\n      username: registration_info.username,\n      email: registration_info.email,\n      password: registration_info.password,\n    }),\n    headers: getHttpHeaders(),\n  });\n\n  const response = await request.json();\n\n  if (!request.ok) {\n    throw new Error(`Error ${request.status} : ${response.error}.`);\n  }\n\n  return response;\n}\n\nexport async function loginUser(\n  user: LoginCredentials\n): Promise<{ user: User; token: string }> {\n  const request = await fetch(\"http://localhost:3000/user/login\", {\n    method: \"POST\",\n    body: JSON.stringify({ email: user.email, password: user.password }),\n    headers: getHttpHeaders(),\n  });\n\n  const response = await request.json();\n\n  if (!request.ok) {\n    throw new Error(`Error ${request.status} : ${response.error}`);\n  }\n\n  return response;\n}\n\nexport async function authenticateUser(): Promise<User> {\n  const request = await fetch(\"http://localhost:3000/user/authenticate\", {\n    method: \"POST\",\n    headers: getHttpHeaders(),\n  });\n\n  const response = await request.json();\n\n  if (!request.ok) {\n    throw new Error(`Error ${request.status} : ${response.error}`);\n  }\n\n  return response.user;\n}\n\nexport async function deleteUser(\n  user_id: number,\n  user_password: string\n): Promise<any> {\n  const request = await fetch(`http://localhost:3000/user/${user_id}/delete`, {\n    method: \"POST\",\n    body: JSON.stringify({ password: user_password }),\n    headers: getHttpHeaders(),\n  });\n\n  const response = await request.json();\n\n  if (!request.ok) {\n    throw new Error(`Error ${request.status} : ${response.error}`);\n  }\n\n  return response;\n}\n"],"sourceRoot":""}]}